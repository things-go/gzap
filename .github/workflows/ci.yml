name: Tests

on:
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

env:
  GO111MODULE: on
  GOPROXY: "https://proxy.golang.org"

jobs:
  build:
    name: Test on ${{ matrix.os }} @Go${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: ["1.19.x", "1.20.x"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Print Go environment
        id: vars
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env
          # Calculate the short SHA1 hash of the git commit
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "go_cache=$(go env GOCACHE)" >> $GITHUB_OUTPUT

      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.vars.outputs.go_cache }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go-version }}-go-ci-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.go-version }}-go-ci

      - name: Unit test
        run: |
          go test -v -race -coverprofile=coverage -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage
          flags: unittests
          verbose: true
